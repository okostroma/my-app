{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo.module.css","components/Profile/done.png","components/Profile/undone.jpg","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/avatar.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfoWithHooks.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","avatar","src","message","like","maxLength10","maxLenghtCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","TextArea","placeholder","name","addPost","MyPosts","postElement","posts","map","post","key","id","postInfo","values","newPostText","MyPostsContainer","text","profileReducer","dispatch","addPostActionCreator","ProfileInfoWithHooks","useState","isEditMode","setEditMode","status","setStatus","useEffect","isOnEditMode","profile","info","avaBlock","photos","large","user","isOwner","changeAvaButton","type","onChange","e","target","files","length","savePhoto","profileInfo","fullName","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","aboutMe","lookingForAJob","job","alt","done","undone","contacts","href","facebook","vk","twitter","instagram","PreLoader","Profile","content","ProfileContainer","refreshProfile","userId","match","params","authUserId","history","put","getProfileThunk","getStatusThunk","prevProps","prevState","snapshot","updateStatusThunk","setPhotosThunk","compose","withRouter"],"mappings":"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","file":"static/js/3.1adf0b6b.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = ( Component ) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect) (RedirectComponent);\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__4UCXI\",\"info\":\"ProfileInfo_info__24fRA\",\"job\":\"ProfileInfo_job__2yVUl\",\"contacts\":\"ProfileInfo_contacts__1GtZn\",\"profileInfo\":\"ProfileInfo_profileInfo__1sO0z\",\"avaBlock\":\"ProfileInfo_avaBlock__3YnU9\",\"changeAvaButton\":\"ProfileInfo_changeAvaButton__2tGBT\"};","module.exports = __webpack_public_path__ + \"static/media/done.b9ea0577.png\";","module.exports = __webpack_public_path__ + \"static/media/undone.007a5ffb.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2YBPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postInfo\":\"MyPosts_postInfo__2c5lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__whpK4\",\"avatar\":\"Post_avatar__18xxM\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.adf3f16b.png\";","import React from \"react\";\r\nimport classes from './Post.module.css'\r\nimport avatar from './avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n           <img className={classes.avatar} src={avatar} />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../FormsControls/FormControls\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let addPost = (values) => {\r\n        // props.dispatch(addPostActionCreator());\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    let postElement = props.posts.map(post => <Post key={post.id} message={post.message} like={post.like}/>)\r\n\r\n    return (\r\n        <div className={classes.postInfo}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n\r\n            {postElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  validate={[required, maxLength10]} component={TextArea} placeholder=\"New post\" name='newPostText'/>\r\n            </div>\r\n            <div className={classes.addPost}>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form:'AddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport done from './done.png'\r\nimport undone from './undone.jpg';\r\nimport user from '../../assets/img/user.png';\r\n\r\n\r\nclass ProfileInfo extends React.Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    isOnEditMode = () => {\r\n        this.setState({\r\n            isEditMode: true\r\n        })\r\n    }\r\n\r\n    changeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n\r\n    }\r\n    onBlur = () => {\r\n        this.setState({\r\n            isEditMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <PreLoader />\r\n        }\r\n        return (<div>\r\n                {/*<div className={classes.mainPic}>*/}\r\n\r\n                {/*</div>*/}\r\n                <div className={classes.info}>\r\n                    <img className={classes.avatar}\r\n                         src={this.props.profile.photos.large || user}/>\r\n                    <div className={classes.profileInfo}>\r\n                        <div>{this.props.profile.fullName}</div>\r\n                        {this.state.isEditMode ? <input onChange={this.changeStatus} autoFocus={true} onBlur={this.onBlur} value={this.state.status}/> :\r\n                            <span onDoubleClick={this.isOnEditMode}>{this.props.status || '-------'}</span> }\r\n\r\n                        <div onDoubleClick={this.isOnEditMode}>{this.props.profile.aboutMe}</div>\r\n\r\n                        <div>\r\n                            Looking for a job: {this.props.profile.lookingForAJob ?\r\n                            <img className={classes.job} alt='' src={done}/> :\r\n                            <img className={classes.job} alt='' src={undone}/>}\r\n                        </div>\r\n                        <div>\r\n                            Contacts:\r\n                            <div className={classes.contacts}>\r\n                                <a href='#'>{this.props.profile.contacts.facebook}</a>\r\n                                <a href='#'>{this.props.profile.contacts.vk}</a>\r\n                                <a href='#'>{this.props.profile.contacts.twitter}</a>\r\n                                <a href='#'>{this.props.profile.contacts.instagram}</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\n\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        text: state.profileReducer.text,\r\n        posts: state.profileReducer.posts\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport done from './done.png'\r\nimport undone from './undone.jpg';\r\nimport user from '../../assets/img/user.png';\r\n\r\n\r\nconst ProfileInfoWithHooks = (props) => {\r\n\r\n    const [isEditMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const isOnEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onAvatarChanged = (e) => {\r\n        if(e.target.files.length) {\r\n           props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (!props.profile) {\r\n        return <PreLoader/>\r\n    }\r\n    return (<div>\r\n            {/*<div className={classes.mainPic}>*/}\r\n\r\n            {/*</div>*/}\r\n            <div className={classes.info}>\r\n                <div className={classes.avaBlock}>\r\n                <img className={classes.avatar}\r\n                     src={props.profile.photos.large || user}/>\r\n                {props.isOwner && <div><input className={classes.changeAvaButton} id='file' type='file' onChange={onAvatarChanged}/>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div className={classes.profileInfo}>\r\n                    <div>{props.profile.fullName}</div>\r\n                    {/*<div>{this.props.status}</div>*/}\r\n                    {isEditMode ? <input onChange={changeStatus} autoFocus={true} onBlur={onBlur}\r\n                                         value={status}/> :\r\n                        <div onDoubleClick={isOnEditMode}>{props.status || '-------'}</div>}\r\n\r\n                    <div onDoubleClick={isOnEditMode}>{props.profile.aboutMe}</div>\r\n\r\n                    <div>\r\n                        Looking for a job: {props.profile.lookingForAJob ?\r\n                        <img className={classes.job} alt='' src={done}/> :\r\n                        <img className={classes.job} alt='' src={undone}/>}\r\n                    </div>\r\n                    <div>\r\n                        Contacts:\r\n                        <div className={classes.contacts}>\r\n                            <a href='#'>{props.profile.contacts.facebook}</a>\r\n                            <a href='#'>{props.profile.contacts.vk}</a>\r\n                            <a href='#'>{props.profile.contacts.twitter}</a>\r\n                            <a href='#'>{props.profile.contacts.instagram}</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfoWithHooks;\r\n\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ProfileInfoWithHooks from \"./ProfileInfoWithHooks\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <ProfileInfoWithHooks savePhoto={props.savePhoto}\r\n                                  isOwner={props.isOwner}\r\n                                  status={props.status}\r\n                                  profile={props.profile}\r\n                                  updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk, setPhotosThunk,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.put('/login')\r\n\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatusThunk}\r\n                         savePhoto={this.props.setPhotosThunk}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    updateStatusThunk, setPhotosThunk\r\n}), withRouter, withAuthRedirect)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}