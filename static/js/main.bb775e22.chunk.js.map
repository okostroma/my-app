{"version":3,"sources":["components/Nav/Nav.module.css","components/Header/logo.png","components/Friends/Friends.module.css","assets/img/user.png","components/Dialogs/Dialogs.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/avatar.png","components/Profile/done.png","components/Profile/undone.jpg","components/Friends/avaMessage.png","components/Users/Users.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/friendsReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Friends/FriendsItem.jsx","components/Friends/Friends.jsx","components/Nav/FriendsContainer.jsx","components/Nav/Nav.jsx","components/Dialogs/Dialog.jsx","components/Dialogs/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Preloader/PreLoader.jsx","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/HeaderContainer.jsx","components/Header/Login.jsx","App.js","index.js","components/Profile/ProfileInfo.module.css","components/Header/Header.module.css","components/Dialogs/avaMessage.png","redux/ava.png","components/Friends/FriendsItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Preloader/PreLoader.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","initialState","posts","id","message","like","text","profile","getUserStatusActionCreator","type","profileReducer","state","action","newPost","newText","dialogs","name","messages","newMessageText","dialogsReducer","newMessage","friends","ava","friendsReducer","users","totalUsersCount","isFetching","followingInProgress","toggleFetching","toggleFollowing","usersReducer","map","user","followed","filter","email","login","isAuth","authReducer","reducers","combineReducers","auth","form","formReducer","store","createStore","applyMiddleware","thunk","Header","props","className","classes","header","logo","src","loginBlock","to","FriendsItem","item","avaMessage","img","Friends","friendsElement","friend","key","friendsBlock","FriendsContainer","connect","Nav","nav","activeClassName","active","itemUsers","Dialog","dialogCol","Message","dialog","messageText","Dialogs","newMessageRef","React","createRef","dialogElements","messageElements","dialogItem","textArea","ref","onChange","current","value","onTextMessageChange","onClick","addNewMessage","btn","mapStateToPropsRedirect","withAuthRedirect","Component","RedirectComponent","this","compose","dispatch","addMessageActionCreator","Users","pagesCount","Math","ceil","pages","i","push","usersPage","p","selectedPage","page","e","onPageChanged","userItem","userBlock","photos","small","userPhoto","alt","disabled","some","unfollow","follow","userBlockBody","userStatus","PreLoader","loader","loaderItem","UsersContainer","getUsers","followUser","unFollow","unfollowUser","resultCode","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","Post","avatar","MyPosts","newPostRef","postElement","postInfo","onTextChange","placeholder","addPost","ProfileInfo","isEditMode","isOnEditMode","setState","changeStatus","currentTarget","onBlur","updateStatus","prevProps","prevState","snapshot","mainPic","info","large","profileInfo","fullName","autoFocus","onDoubleClick","aboutMe","lookingForAJob","job","done","undone","contacts","href","facebook","vk","twitter","instagram","MyPostsContainer","addTextChangeActionCreator","Profile","content","ProfileContainer","params","getProfileThunk","getStatusThunk","updateStatusThunk","console","log","withRouter","HeaderContainer","isOnAuth","setAuthUserData","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","Login","formData","App","path","render","DialogsContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bb775e22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__29Zts\",\"item\":\"Nav_item__3AO71\",\"active\":\"Nav_active__2Jdn9\",\"friends\":\"Nav_friends__2m-nt\",\"itemUsers\":\"Nav_itemUsers__3v6tu\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f50ceefd.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Friends_avaMessage__1Vc5_\",\"name\":\"Friends_name__3U4Qm\",\"friendsBlock\":\"Friends_friendsBlock__2RrYR\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35Lum\",\"dialogItem\":\"Dialogs_dialogItem__2bA-5\",\"active\":\"Dialogs_active__34DVD\",\"dialogCol\":\"Dialogs_dialogCol__18ftw\",\"dialog\":\"Dialogs_dialog__31XvN\",\"messages\":\"Dialogs_messages__3ZC1X\",\"message\":\"Dialogs_message__3ETRK\",\"avaMessage\":\"Dialogs_avaMessage__2unvE\",\"name\":\"Dialogs_name__3Ela2\",\"rightItem\":\"Dialogs_rightItem__2pMdr\",\"messageText\":\"Dialogs_messageText__2RuMn\",\"textArea\":\"Dialogs_textArea__lBIak\",\"btn\":\"Dialogs_btn__2e9BP\",\"text\":\"Dialogs_text__13LOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2YBPj\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.adf3f16b.png\";","module.exports = __webpack_public_path__ + \"static/media/done.b9ea0577.png\";","module.exports = __webpack_public_path__ + \"static/media/undone.007a5ffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Users_avaMessage__3YZA3\",\"usersPage\":\"Users_usersPage__DRlhh\",\"users\":\"Users_users__1UuJc\",\"userBlock\":\"Users_userBlock__26PAc\",\"userBlockBody\":\"Users_userBlockBody__34J-l\",\"userItem\":\"Users_userItem__16tYE\",\"userStatus\":\"Users_userStatus__3yUGZ\",\"userTitle\":\"Users_userTitle__1wq5P\",\"page\":\"Users_page__2vjn6\",\"selectedPage\":\"Users_selectedPage__gZpN4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {'API-KEY': 'd88efdc6-2899-4354-8370-9788e254d3dc'}\r\n    }\r\n)\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response =>\r\n            response.data)\r\n    },\r\n    getAuthData(){\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    followUser(userId){\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollowUser(userId){\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status}).then(response => response.data)\r\n    }\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst GET_USER_STATUS = 'GET_USER_STATUS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, message: \"hello\", like: \"5\"},\r\n        {id: 1, message: \"how are you?\", like: \"0\"}\r\n    ],\r\n    text: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                message: state.text, like: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                text: ''\r\n            }\r\n            // stateCopy.posts = [...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.text = '';\r\n            // return stateCopy;\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                text: action.newText\r\n            }\r\n            // stateCopy.text = action.newText;\r\n            // return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case GET_USER_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\n\r\nexport const addTextChangeActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\nexport const setUserProfileActionCreator = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getUserStatusActionCreator = (status) => ({type: GET_USER_STATUS, status})\r\n\r\n\r\nexport const getProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(userId).then(data => {\r\n            dispatch(setUserProfileActionCreator(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(data => {\r\n            console.log(data)\r\n            dispatch(getUserStatusActionCreator(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(getUserStatusActionCreator(status))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Sasha\"},\r\n        {id: 2, name: \"Oxa\"},\r\n        {id: 3, name: \"Andrew\"},\r\n        {id: 4, name: \"Roman\"}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"how are you?\"},\r\n        {id: 3, message: \"yo\"},\r\n        {id: 4, message: \"yo\"}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    // let stateCopy;\r\n\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessage\r\n            }\r\n            // return stateCopy;\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = state.newMessageText;\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 5, message: newMessage} ]\r\n            }\r\n            // return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (message) => ({type: UPDATE_NEW_MESSAGE_TEXT, newMessage: message})\r\n\r\nexport const addSendMessageActionCreator = () => ({type: SEND_MESSAGE})\r\n\r\n\r\nexport default dialogsReducer;\r\n","import ava from \"./ava.png\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Sasha\", ava: ava},\r\n        {id: 2, name: \"Oxa\", ava: ava},\r\n        {id: 3, name: \"Andrew\", ava: ava}\r\n    ]\r\n};\r\n\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default friendsReducer;\r\n","import {usersAPI} from \"../api/api\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE-FETCHING';\r\nconst TOGGLE_FOLLOWING = 'TOGGLE_FOLLOWING'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId: userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId: userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users: users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount: totalUsersCount})\r\nexport const toggleFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching: isFetching})\r\nexport const toggleFollowing = (followingInProgress, userId) => ({type: TOGGLE_FOLLOWING, followingInProgress, userId})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const unfollowUser = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, userId))\r\n        usersAPI.unfollowUser(userId).then(data => {\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId))\r\n                dispatch(toggleFollowing(false, userId))\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const followUser = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, userId))\r\n        usersAPI.followUser(userId).then(data => {\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n                dispatch(toggleFollowing(false, userId))\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n// const TOGGLE_FETCHING = 'TOGGLE-FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data, isAuth: true\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login) => ({type: SET_USER_DATA, data: {id, email, login}})\r\n\r\nexport const isOnAuth = () => {\r\n    return (dispatch) => {\r\n        usersAPI.getAuthData().then(data => {\r\n\r\n            if(data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    friendsReducer: friendsReducer,\r\n    usersReducer: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport './Header.module.css';\r\nimport classes from './Header.module.css';\r\nimport logo from './logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img className={classes.logo}\r\n                 src={logo}/>\r\n\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink> }\r\n\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport classes from './FriendsItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendsItem = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img className={classes.avaMessage} src={props.img}/>\r\n            <span className={classes.name}>{props.name}</span>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nFriendsItem.propTypes = {\r\n    name: PropTypes.string,\r\n    img: PropTypes.any\r\n}\r\n\r\nexport default FriendsItem;","import React from \"react\";\r\nimport classes from './Friends.module.css'\r\nimport avaMessage from \"./avaMessage.png\";\r\nimport FriendsItem from \"./FriendsItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElement = props.friends.map(friend => <FriendsItem key={friend.id} name={friend.name} img={friend.ava}/>)\r\n\r\n    return (\r\n        <div className={classes.friendsBlock}>\r\n            {friendsElement}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nFriends.propTypes = {\r\n    friends: PropTypes.array,\r\n    name: PropTypes.string\r\n}\r\n\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport './Nav.module.css';\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport Friends from \"../Friends/Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        friends: state.friendsReducer.friends\r\n    }\r\n}\r\n\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps) (Friends);\r\n\r\n\r\nexport default FriendsContainer;\r\n\r\n","import React from \"react\";\r\nimport './Nav.module.css';\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsContainer from \"./FriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/profile'} activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/news'} activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/music'} activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/settings'} activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to={'/friends'} activeClassName={classes.active}>Friends</NavLink>\r\n            </div>\r\n            {/*<Friends friends={props.state.friendsReducer.friends}/>*/}\r\n\r\n            <FriendsContainer />\r\n\r\n            <div className={classes.itemUsers}>\r\n                <NavLink to={'/users'} activeClassName={classes.active}>Find Users</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={classes.dialogCol}>\r\n            <img className={classes.avaMessage} src={avaMessage}/>\r\n            <NavLink to={\"/dialogs/\" + props.id}><span className={classes.name}>{props.name}</span></NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialog;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img className={classes.avaMessage + ' ' + props.className} src={avaMessage}/>\r\n            <span className={classes.messageText + ' ' + props.className}>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog\";\r\nimport Message from \"./Message\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // let state = props.state.dialogsReducer;\r\n\r\n    let newMessageRef = React.createRef();\r\n\r\n    let addNewMessage = () => {\r\n        // props.dispatch(addSendMessageActionCreator() );\r\n        props.addNewMessage();\r\n\r\n    }\r\n    let onTextMessageChange = () => {\r\n        let message = newMessageRef.current.value;\r\n        // props.dispatch(addMessageActionCreator(message));\r\n        props.onTextMessageChange(message);\r\n\r\n    }\r\n\r\n\r\n    let dialogElements = props.dialogsReducer.dialogs.map (dialog=> <Dialog id={dialog.id} key={dialog.id} name={dialog.name}/>)\r\n\r\n    let messageElements = props.dialogsReducer.messages.map(message=> {\r\n\r\n        return <Message key={message.id} message = {message.message} />})\r\n\r\n    if(!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItem}>\r\n\r\n                {dialogElements}\r\n\r\n\r\n            </div>\r\n            <div className={classes.messages}>\r\n\r\n                {messageElements}\r\n\r\n                <div className={classes.textArea}>\r\n                    <textarea ref={newMessageRef} onChange={onTextMessageChange} className={classes.text}\r\n                              value={props.dialogsReducer.newMessageText}/>\r\n                    <button onClick={addNewMessage} className={classes.btn}>Send</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = ( Component ) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect) (RedirectComponent);\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n         dialogsReducer: state.dialogsReducer\r\n     }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: () => {\r\n            dispatch(addSendMessageActionCreator())\r\n        },\r\n        onTextMessageChange: (message)=> {\r\n            dispatch(addMessageActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n//\r\n// const DialogsContainer = connect(mapStateToProps,mapDispatchToProps) (AuthRedirectComponent)\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps), withAuthRedirect ) (Dialogs);\r\n\r\n","import React from \"react\";\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/img/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {toggleFollowing} from \"../../redux/usersReducer\";\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    // const followUser = () => {\r\n    //     axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${props.users.id}`, {}, {withCredentials: true,\r\n    //         headers: {'API-KEY': '42e5fb1f-f067-4545-a7f8-f1dc74f3a1ae'}}).then(response => {\r\n    //         if(response.data.resultCode === 0) {\r\n    //             props.follow(props.users.id)\r\n    //         }\r\n    //     })\r\n    // }\r\n    //\r\n    // const unfollowUser = () => {\r\n    //     axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${props.users.id}`,\r\n    //         {withCredentials: true,\r\n    //             headers: {'API-KEY': '42e5fb1f-f067-4545-a7f8-f1dc74f3a1ae'}}).then(response => {\r\n    //         if(response.data.resultCode === 0) {\r\n    //             props.unFollow(props.users.id)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    return <div className={classes.usersPage}>\r\n\r\n        {/*<p className={classes.users}>Users</p>*/}\r\n        {!props.isFetching ? <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={`${props.currentPage === p && classes.selectedPage} ${classes.page}`}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            </div>\r\n\r\n\r\n            <div className={classes.users}>\r\n                {props.users.map(user => <div className={classes.userItem} key={user.id}>\r\n                    <div className={classes.userBlock}>\r\n                <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                         <img className={classes.avaMessage}\r\n                         src={user.photos.small !== null ? user.photos.small : userPhoto} alt='photo'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                             onClick={ () => {props.unfollow(user.id)}}>Unfollow</button> :\r\n                        <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                onClick={ () =>{props.follow(user.id)}\r\n                        }>Follow</button>}\r\n                </div>\r\n                </span>\r\n                        <div className={classes.userBlockBody}>\r\n\r\n                            <div>\r\n                                {user.name}\r\n                            </div>\r\n                            <div className={classes.userStatus}>\r\n                                {user.status}\r\n\r\n                            </div>\r\n\r\n                            <span>\r\n                        <div>\r\n                            {'user.location.city'}\r\n\r\n                        </div>\r\n                        <div>\r\n                            {'user.location.country'}\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>)}\r\n\r\n            </div>\r\n        </div> : null}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n","import React from \"react\";\r\nimport classes from './PreLoader.module.css'\r\n\r\n\r\nconst PreLoader = (props) => {\r\n\r\n\r\n    return <div className={`${classes.loader} ${classes.loaderItem}`}>\r\n            <span> </span>\r\n            <span> </span>\r\n            <span> </span>\r\n        </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default PreLoader;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followUser, getUsers,\r\n    toggleFollowing,\r\n    unFollow, unfollowUser\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n        // this.props.toggleFetching(true)\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n\r\n        // this.props.setCurrentPage(currentPage);\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n\r\n\r\n        // this.props.toggleFetching(true);\r\n        // usersAPI.getUsers(currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //\r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <PreLoader /> : null}\r\n            <Users followingInProgress={this.props.followingInProgress} totalUsersCount={this.props.totalUsersCount}\r\n                   currentPage={this.props.currentPage} pageSize={this.props.pageSize}\r\n                   users={this.props.users} follow={this.props.followUser}\r\n                   unFollow={this.props.unfollowUser} onPageChanged={this.onPageChanged}\r\n                   isFetching={this.props.isFetching}/>\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersReducer.users,\r\n        pageSize: state.usersReducer.pageSize,\r\n        totalUsersCount: state.usersReducer.totalUsersCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        followingInProgress: state.usersReducer.followingInProgress\r\n\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unFollow: (userId) => {\r\n//             dispatch(unFollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setTotalUsersCount: (totalUsersCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalUsersCount))\r\n//         },\r\n//         setToggleFetching: (isFetching)=> {\r\n//             dispatch(toggleFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n//\r\n// }\r\n\r\n\r\n\r\n// export default withAuthRedirect(connect(mapStateToProps, {\r\n//     followUser,\r\n//     unfollowUser,\r\n//     getUsers\r\n//     toggleFollowing,\r\n// })(UsersContainer));\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\r\n     followUser,\r\n     unfollowUser,\r\n     toggleFollowing,\r\n     getUsers\r\n }))(UsersContainer)\r\n\r\n","import React from \"react\";\r\nimport classes from './Post.module.css'\r\nimport avatar from './avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n           <img className={classes.avatar} src={avatar} />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let newPostRef = React.createRef();\r\n\r\n    let addPost = () => {\r\n        // props.dispatch(addPostActionCreator());\r\n        props.addPost();\r\n\r\n    }\r\n    let onTextChange = () => {\r\n        let text = newPostRef.current.value;\r\n        props.onTextChange(text);\r\n        // props.dispatch(addTextChangeActionCreator(text));\r\n\r\n    }\r\n\r\n\r\n    let postElement = props.posts.map(post => <Post key={post.id} message={post.message} like={post.like}/>)\r\n\r\n    return (\r\n        <div className={classes.postInfo}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onTextChange} ref={newPostRef} placeholder=\"New post\" value={props.text}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            {postElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport done from './done.png'\r\nimport undone from './undone.jpg';\r\nimport * as axios from \"axios\";\r\n\r\nclass ProfileInfo extends React.Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    isOnEditMode = () => {\r\n        this.setState({\r\n            isEditMode: true\r\n            // status: this.props.status\r\n        })\r\n    }\r\n\r\n    changeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n\r\n    }\r\n    onBlur = () => {\r\n        this.setState({\r\n            isEditMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <PreLoader />\r\n        }\r\n        return (<div>\r\n                <div className={classes.mainPic}>\r\n\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <img className={classes.avatar}\r\n                         src={this.props.profile.photos.large}/>\r\n                    <div className={classes.profileInfo}>\r\n                        <div>{this.props.profile.fullName}</div>\r\n                        {/*<div>{this.props.status}</div>*/}\r\n                        {this.state.isEditMode ? <input onChange={this.changeStatus} autoFocus={true} onBlur={this.onBlur} value={this.state.status}/> :\r\n                            <div onDoubleClick={this.isOnEditMode}>{this.props.status || '-------'}</div> }\r\n\r\n                        <div onDoubleClick={this.isOnEditMode}>{this.props.profile.aboutMe}</div>\r\n\r\n                        <div>\r\n                            Looking for a job: {this.props.profile.lookingForAJob ?\r\n                            <img className={classes.job} alt='' src={done}/> :\r\n                            <img className={classes.job} alt='' src={undone}/>}\r\n                        </div>\r\n                        <div>\r\n                            Contacts:\r\n                            <div className={classes.contacts}>\r\n                                <a href='#'>{this.props.profile.contacts.facebook}</a>\r\n                                <a href='#'>{this.props.profile.contacts.vk}</a>\r\n                                <a href='#'>{this.props.profile.contacts.twitter}</a>\r\n                                <a href='#'>{this.props.profile.contacts.instagram}</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, addTextChangeActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        text: state.profileReducer.text,\r\n        posts: state.profileReducer.posts\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        onTextChange: (text) => {\r\n            dispatch(addTextChangeActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n      // let state = props.store.getState();\r\n\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <ProfileInfo status={props.status} profile={props.profile} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    setUserProfileActionCreator,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {profileAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 8278;\r\n        }\r\n        // profileAPI.getProfile(userId).then(data => {\r\n        //     this.props.setUserProfileActionCreator(data)\r\n        // })\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatusThunk}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// const mapStateToPropsRedirect = (state) => ({\r\n//     isAuth: state.auth.isAuth\r\n// })\r\n//\r\n//\r\n//\r\n// AuthRedirectComponent = connect(mapStateToPropsRedirect) (AuthRedirectComponent)\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status\r\n\r\n})\r\n\r\n//\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n//\r\n// let withURLContainerComponent =  withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, {getProfileThunk, getStatusThunk, updateStatusThunk}), withRouter, withAuthRedirect) (ProfileContainer);\r\n\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {isOnAuth, setAuthUserData} from \"../../redux/authReducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // usersAPI.getAuthData().then(data => {\r\n        //\r\n        //     if(data.resultCode === 0) {\r\n        //         let {id, email, login} = data.data\r\n        //         this.props.setAuthUserData(id, email, login)\r\n        //     }\r\n        //\r\n        // })\r\n\r\n        this.props.isOnAuth()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {isOnAuth})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n\r\n    }\r\n    return (<div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginForm =(props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='login' name={'login'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder='password' name={'password'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name={'rememberMe'} component={'input'}/> Remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nexport default Login;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header.jsx\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Header/Login\";\n\nconst App = (props) => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer />\n                <Nav />\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer\n                                                                   />} />\n                    <Route path='/dialogs' render={() => <DialogsContainer\n                                                                   />} />\n                    {/*<Route path='/friends' render={() => <Friends state={props.state.friendsPage} />} />*/}\n\n                    <Route path='/users' render={() => <UsersContainer />} />\n\n                    <Route path='/login' render={() => <Login />} />\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__4UCXI\",\"info\":\"ProfileInfo_info__24fRA\",\"mainPic\":\"ProfileInfo_mainPic__23XAu\",\"job\":\"ProfileInfo_job__2yVUl\",\"contacts\":\"ProfileInfo_contacts__1GtZn\",\"profileInfo\":\"ProfileInfo_profileInfo__1sO0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lJQl\",\"logo\":\"Header_logo__2_KtS\",\"loginBlock\":\"Header_loginBlock__2ESaP\"};","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","module.exports = __webpack_public_path__ + \"static/media/ava.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"FriendsItem_avaMessage__gaQng\",\"name\":\"FriendsItem_name__3ASE-\",\"item\":\"FriendsItem_item__2mo-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postInfo\":\"MyPosts_postInfo__2c5lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"PreLoader_loader__1e5oh\",\"loaderItem\":\"PreLoader_loaderItem__7rqyc\",\"bounce\":\"PreLoader_bounce__2RXZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__whpK4\",\"avatar\":\"Post_avatar__18xxM\"};"],"sourceRoot":""}