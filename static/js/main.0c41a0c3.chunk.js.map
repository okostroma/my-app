{"version":3,"sources":["components/Nav/Nav.module.css","components/Dialogs/Dialogs.module.css","redux/ava.png","components/Users/Users.module.css","components/Header/Header.module.css","components/Dialogs/avaMessage.png","components/Friends/FriendsItem.module.css","components/Profile/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/logo.png","components/Friends/Friends.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/avatar.png","assets/img/user.png","logo.svg","components/Friends/avaMessage.png","serviceWorker.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/friendsReducer.js","redux/usersReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Friends/FriendsItem.jsx","components/Friends/Friends.jsx","components/Nav/FriendsContainer.jsx","components/Nav/Nav.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Dialogs/Dialog.jsx","components/Dialogs/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","redux/store.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","message","like","text","profileReducer","state","action","type","newPost","newText","dialogs","name","messages","newMessageText","dialogsReducer","newMessage","friends","ava","friendsReducer","users","usersReducer","map","user","userId","followed","reducers","combineReducers","store","createStore","Header","className","classes","header","logo","src","FriendsItem","props","item","avaMessage","img","Friends","friendsElement","friend","key","friendsBlock","FriendsContainer","connect","Nav","nav","to","activeClassName","active","itemUsers","Post","avatar","MyPosts","newPostRef","React","createRef","postElement","post","postInfo","onChange","current","value","onTextChange","ref","placeholder","onClick","addPost","ProfileInfo","mainPic","info","MyPostsContainer","dispatch","addTextChangeActionCreator","Profile","content","Dialog","dialogCol","Message","dialog","messageText","Dialogs","newMessageRef","dialogElements","messageElements","dialogItem","textArea","onTextMessageChange","addNewMessage","btn","DialogsContainer","addMessageActionCreator","Users","usersPage","length","axios","then","response","setUsers","data","items","userBlock","photos","small","userPhoto","unFollow","follow","userBlockBody","status","followAC","unFollowAC","setUsersAC","App","path","render","UsersContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,oBAAoB,QAAU,qBAAqB,UAAY,yB,gBCA1ID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,UAAY,2BAA2B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,KAAO,sBAAsB,UAAY,2BAA2B,YAAc,6BAA6B,SAAW,0BAA0B,IAAM,qBAAqB,KAAO,wB,uBCD9eD,EAAOC,QAAU,IAA0B,iC,oBCC3CD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,UAAY,yBAAyB,MAAQ,qBAAqB,UAAY,yBAAyB,cAAgB,+B,oBCAhLD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,gBCDzDD,EAAOC,QAAU,IAA0B,wC,gBCC3CD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,KAAO,4B,gBCAvGD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,QAAU,+B,iBCAlGD,EAAOC,QAAU,CAAC,SAAW,4B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,2BCDrDD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,sBAAsB,aAAe,gC,iBCAvGD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,oC,iBCA3CD,EAAOC,QAAU,IAA0B,kC,wECA3CD,EAAOC,QAAU,IAA0B,kC,kCCA3CD,EAAOC,QAAU,IAA0B,wC,mFCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2BCfFC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,QAASC,KAAM,KAChC,CAACF,GAAI,EAAGC,QAAS,eAAgBC,KAAM,MAE3CC,KAAM,IAyCKC,EArCQ,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAErD,OAAQA,EAAOC,MACX,IAfS,WAgBL,IAAIC,EAAU,CACVP,QAASI,EAAMF,KAAMD,KAAM,KAE/B,OAAO,eACAG,EADP,CAEIN,MAAM,GAAD,mBAAMM,EAAMN,OAAZ,CAAmBS,IACxBL,KAAM,KAOd,IA5BqB,uBA6BjB,OAAO,eACAE,EADP,CAEIF,KAAMG,EAAOG,UAKrB,QACI,OAAOJ,ICnCfP,EAAe,CACfY,QAAS,CACL,CAACV,GAAI,EAAGW,KAAM,SACd,CAACX,GAAI,EAAGW,KAAM,OACd,CAACX,GAAI,EAAGW,KAAM,UACd,CAACX,GAAI,EAAGW,KAAM,UAGlBC,SAAU,CACN,CAACZ,GAAI,EAAGC,QAAS,SACjB,CAACD,GAAI,EAAGC,QAAS,gBACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,OAErBY,eAAgB,IAsCLC,EAnCQ,WAAmC,IAAlCT,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAKrD,OAAQA,EAAOC,MACX,IA1BwB,0BA2BpB,OAAO,eACAF,EADP,CAEIQ,eAAgBP,EAAOS,aAI/B,IAhCa,eAiCT,IAAIA,EAAaV,EAAMQ,eACvB,OAAO,eACAR,EADP,CAEIQ,eAAgB,GAChBD,SAAS,GAAD,mBAAMP,EAAMO,UAAZ,CAAsB,CAACZ,GAAI,EAAGC,QAASc,OAIvD,QACI,OAAOV,I,iBCxCfP,EAAe,CACfkB,QAAS,CACL,CAAChB,GAAI,EAAGW,KAAM,QAASM,IAAKA,KAC5B,CAACjB,GAAI,EAAGW,KAAM,MAAOM,IAAKA,KAC1B,CAACjB,GAAI,EAAGW,KAAM,SAAUM,IAAKA,OAUtBC,EALQ,WAAmC,IAAlCb,EAAiC,uDAAzBP,EAAyB,iCACrD,OAAOO,GCNPP,EAAe,CACfqB,MAAO,IAmDIC,EAvCM,WAAmC,IAAlCf,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACX,IApBO,SAqBH,OAAO,eACAF,EADP,CAEIc,MAAOd,EAAMc,MAAME,KAAI,SAAAC,GACnB,OAAIA,EAAKtB,KAAOM,EAAOiB,OACZ,eAAID,EAAX,CAAiBE,UAAU,IAGxBF,OAInB,IA/BS,WAgCL,OAAO,eACAjB,EADP,CAEIc,MAAOd,EAAMc,MAAME,KAAI,SAAAC,GACnB,OAAIA,EAAKtB,KAAOM,EAAOiB,OACZ,eAAID,EAAX,CAAiBE,UAAU,IAGxBF,OAGnB,IAzCU,YA0CN,OAAO,eAAIjB,EAAX,CAAkBc,MAAM,GAAD,mBAAKd,EAAMc,OAAX,YAAqBb,EAAOa,UAEvD,QACI,OAAOd,IC3CfoB,EAAWC,YAAgB,CAC3BtB,eAAgBA,EAChBU,eAAgBA,EAChBI,eAAgBA,EAChBE,aAAcA,IAUHO,EANHC,YAAYH,G,iECCTI,EATA,WACX,OACJ,4BAAQC,UAAWC,IAAQC,QACvB,yBAAKF,UAAWC,IAAQE,KACnBC,IAAKD,Q,wCCaCE,EAnBK,SAACC,GAEjB,OAEI,yBAAKN,UAAWC,IAAQM,MACpB,yBAAKP,UAAWC,IAAQO,WAAYJ,IAAKE,EAAMG,MAC/C,0BAAMT,UAAWC,IAAQpB,MAAOyB,EAAMzB,Q,iBCenC6B,G,MAnBC,SAACJ,GAEb,IAAIK,EAAiBL,EAAMpB,QAAQK,KAAI,SAAAqB,GAAM,OAAI,kBAAC,EAAD,CAAaC,IAAKD,EAAO1C,GAAIW,KAAM+B,EAAO/B,KAAM4B,IAAKG,EAAOzB,SAE7G,OACI,yBAAKa,UAAWC,IAAQa,cACnBH,K,QCSEI,EAHUC,aARF,SAACzC,GACpB,MAAO,CACHW,QAASX,EAAMa,eAAeF,WAMb8B,CAA0BN,GC8BpCO,EAvCH,SAACX,GAGT,OACI,yBAAKN,UAAWC,IAAQiB,KACpB,yBAAKlB,UAAWC,IAAQM,MACpB,kBAAC,IAAD,CAASY,GAAI,WAAYC,gBAAiBnB,IAAQoB,QAAlD,YAEJ,yBAAKrB,UAAWC,IAAQM,MACpB,kBAAC,IAAD,CAASY,GAAI,WAAYC,gBAAiBnB,IAAQoB,QAAlD,aAEJ,yBAAKrB,UAAWC,IAAQM,MACpB,kBAAC,IAAD,CAASY,GAAI,QAASC,gBAAiBnB,IAAQoB,QAA/C,SAEJ,yBAAKrB,UAAWC,IAAQM,MACpB,kBAAC,IAAD,CAASY,GAAI,SAAUC,gBAAiBnB,IAAQoB,QAAhD,UAEJ,yBAAKrB,UAAWC,IAAQM,MACpB,kBAAC,IAAD,CAASY,GAAI,YAAaC,gBAAiBnB,IAAQoB,QAAnD,aAIJ,yBAAKrB,UAAWC,IAAQf,SACpB,kBAAC,IAAD,CAASiC,GAAI,WAAYC,gBAAiBnB,IAAQoB,QAAlD,YAIJ,kBAAC,EAAD,MAEA,yBAAKrB,UAAWC,IAAQqB,WACpB,kBAAC,IAAD,CAASH,GAAI,SAAUC,gBAAiBnB,IAAQoB,QAAhD,iB,oECpBDE,EAdF,SAACjB,GAEV,OACI,yBAAKN,UAAWC,IAAQM,MACrB,yBAAKP,UAAWC,IAAQuB,OAAQpB,IAAKoB,MACnClB,EAAMnC,QACP,6BACI,sCAAYmC,EAAMlC,SC6BnBqD,EAnCC,SAACnB,GACb,IAAIoB,EAAaC,IAAMC,YAenBC,EAAcvB,EAAMrC,MAAMsB,KAAI,SAAAuC,GAAI,OAAI,kBAAC,EAAD,CAAMjB,IAAKiB,EAAK5D,GAAIC,QAAS2D,EAAK3D,QAASC,KAAM0D,EAAK1D,UAEhG,OACI,yBAAK4B,UAAWC,IAAQ8B,UACpB,wCACA,6BACI,6BACI,8BAAUC,SAfP,WACf,IAAI3D,EAAOqD,EAAWO,QAAQC,MAC9B5B,EAAM6B,aAAa9D,IAa2B+D,IAAKV,EAAYW,YAAY,WAAWH,MAAO5B,EAAMjC,QAE3F,6BACI,4BAAQiE,QAvBV,WAEVhC,EAAMiC,YAqBM,cAIPV,I,iBChBEW,EAhBK,WAChB,OAAQ,6BACA,yBAAKxC,UAAWC,IAAQwC,UAGxB,yBAAKzC,UAAWC,IAAQyC,MACpB,yBAAK1C,UAAWC,IAAQuB,OACnBpB,IAAI,mFAFb,oBCmBGuC,EAFU3B,aAjBD,SAACzC,GACrB,MAAO,CACHF,KAAME,EAAMD,eAAeD,KAC3BJ,MAAOM,EAAMD,eAAeL,UAIT,SAAC2E,GACxB,MAAO,CACHL,QAAS,WACLK,EbyB+B,CAACnE,KA5C3B,caqBT0D,aAAc,SAAC9D,GACXuE,EbwB8B,SAACvE,GAAD,MAAW,CAACI,KA7CzB,uBA6CqDE,QAASN,GaxBtEwE,CAA2BxE,QAIvB2C,CAA6CS,GCJvDqB,EAfC,SAACxC,GAIb,OACI,yBAAKN,UAAWC,IAAQ8C,SAEpB,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,uCCGGC,GAXA,SAAC1C,GACZ,OACI,yBAAKN,UAAWC,KAAQgD,WACpB,yBAAKjD,UAAWC,KAAQO,WAAYJ,IAAKI,OACzC,kBAAC,IAAD,CAASW,GAAI,YAAcb,EAAMpC,IAAI,0BAAM8B,UAAWC,KAAQpB,MAAOyB,EAAMzB,SCSxEqE,GAbC,SAAC5C,GAEb,OACI,yBAAKN,UAAWC,KAAQkD,QACpB,yBAAKnD,UAAWC,KAAQO,WAAa,IAAMF,EAAMN,UAAWI,IAAKI,OACjE,0BAAMR,UAAWC,KAAQmD,YAAc,IAAM9C,EAAMN,WAAYM,EAAMnC,WCgDlEkF,GAjDC,SAAC/C,GAIb,IAAIgD,EAAgB3B,IAAMC,YAetB2B,EAAiBjD,EAAMtB,eAAeJ,QAAQW,KAAK,SAAA4D,GAAM,OAAG,kBAAC,GAAD,CAAQjF,GAAIiF,EAAOjF,GAAI2C,IAAKsC,EAAOjF,GAAIW,KAAMsE,EAAOtE,UAEhH2E,EAAkBlD,EAAMtB,eAAeF,SAASS,KAAI,SAAApB,GAEpD,OAAO,kBAAC,GAAD,CAAS0C,IAAK1C,EAAQD,GAAIC,QAAWA,EAAQA,aAExD,OACI,yBAAK6B,UAAWC,KAAQrB,SACpB,yBAAKoB,UAAWC,KAAQwD,YAEnBF,GAIL,yBAAKvD,UAAWC,KAAQnB,UAEnB0E,EAED,yBAAKxD,UAAWC,KAAQyD,UACpB,8BAAUtB,IAAKkB,EAAetB,SA3BpB,WACtB,IAAI7D,EAAUmF,EAAcrB,QAAQC,MAEpC5B,EAAMqD,oBAAoBxF,IAwB+C6B,UAAWC,KAAQ5B,KACtE6D,MAAO5B,EAAMtB,eAAeD,iBACtC,4BAAQuD,QAlCJ,WAEhBhC,EAAMsD,iBAgCsC5D,UAAWC,KAAQ4D,KAAnD,Y,SCtBLC,ICS6B3E,IACFA,IACGA,IDbpB6B,aAjBD,SAACzC,GACpB,MAAO,CACHS,eAAgBT,EAAMS,mBAGJ,SAAC4D,GACxB,MAAO,CACHgB,cAAe,WACXhB,EjBkCsC,CAACnE,KAnD9B,kBiBmBbkF,oBAAqB,SAACxF,GAClByE,EjB6B2B,SAACzE,GAAD,MAAc,CAACM,KAlDtB,0BAkDqDQ,WAAYd,GiB7B5E4F,CAAwB5F,QAMpB6C,CAA6CqC,K,iDE6CvDW,GAjED,SAAC1D,GAUX,OACI,yBAAKN,UAAWC,KAAQgE,WAEpB,uBAAGjE,UAAWC,KAAQZ,OAAtB,SAFJ,IAE2C,4BAAQiD,QAZxC,WACgB,IAAvBhC,EAAMjB,MAAM6E,QACZC,OAAU,sDAAsDC,MAAK,SAAAC,GACjE/D,EAAMgE,SAASD,EAASE,KAAKC,YASM,eAGtClE,EAAMjB,MAAME,KAAI,SAAAC,GAAI,OAAI,yBAAKqB,IAAKrB,EAAKtB,IACpC,yBAAK8B,UAAWC,KAAQwE,WACxB,8BACA,6BACI,yBAAKzE,UAAWC,KAAQO,WACnBJ,IAA2B,OAAtBZ,EAAKkF,OAAOC,MAAiBnF,EAAKkF,OAAOC,MAAQC,QAE/D,6BACKpF,EAAKE,SAAW,4BAAQ4C,QAAS,WAC1BhC,EAAMuE,SAASrF,EAAKtB,MADX,YAGb,4BAAQoE,QAAS,WACbhC,EAAMwE,OAAOtF,EAAKtB,MADtB,YAKJ,yBAAK8B,UAAWC,KAAQ8E,eACxB,8BACI,6BACKvF,EAAKX,MAEV,6BACKW,EAAKwF,SAKV,8BACA,6BACK,sBAGL,6BACK,kCC7BdhE,gBAtBS,SAACzC,GACrB,MAAO,CACHc,MAAOd,EAAMe,aAAaD,UAIP,SAACuD,GACxB,MAAO,CACHkC,OAAQ,SAACrF,GACLmD,ElByCY,SAACnD,GAAD,MAAa,CAAChB,KArDvB,SAqDqCgB,OAAQA,GkBzCvCwF,CAASxF,KAEtBoF,SAAU,SAACpF,GACPmD,ElBuCc,SAACnD,GAAD,MAAa,CAAChB,KArDvB,WAqDuCgB,OAAQA,GkBvC3CyF,CAAWzF,KAExB6E,SAAU,SAACjF,GACPuD,ElBqCc,SAACvD,GAAD,MAAY,CAACZ,KArDrB,YAqDsCY,MAAOA,GkBrC1C8F,CAAW9F,QAOjB2B,CAA6CgD,ICW7CoB,GAxBH,SAAC9E,GAET,OACI,kBAAC,IAAD,KACI,yBAAKN,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,KAAD,CAAOqF,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,SAErC,kBAAC,KAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,SAIrC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAACC,GAAD,aClBvDC,IAASF,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUzF,MAAOA,GACb,kBAAC,GAAD,QAGR4F,SAASC,eAAe,SxBmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9H,c","file":"static/js/main.0c41a0c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__29Zts\",\"item\":\"Nav_item__3AO71\",\"active\":\"Nav_active__2Jdn9\",\"friends\":\"Nav_friends__2m-nt\",\"itemUsers\":\"Nav_itemUsers__3v6tu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35Lum\",\"dialogItem\":\"Dialogs_dialogItem__2bA-5\",\"active\":\"Dialogs_active__34DVD\",\"dialogCol\":\"Dialogs_dialogCol__18ftw\",\"dialog\":\"Dialogs_dialog__31XvN\",\"messages\":\"Dialogs_messages__3ZC1X\",\"message\":\"Dialogs_message__3ETRK\",\"avaMessage\":\"Dialogs_avaMessage__2unvE\",\"name\":\"Dialogs_name__3Ela2\",\"rightItem\":\"Dialogs_rightItem__2pMdr\",\"messageText\":\"Dialogs_messageText__2RuMn\",\"textArea\":\"Dialogs_textArea__lBIak\",\"btn\":\"Dialogs_btn__2e9BP\",\"text\":\"Dialogs_text__13LOX\"};","module.exports = __webpack_public_path__ + \"static/media/ava.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Users_avaMessage__3YZA3\",\"usersPage\":\"Users_usersPage__DRlhh\",\"users\":\"Users_users__1UuJc\",\"userBlock\":\"Users_userBlock__26PAc\",\"userBlockBody\":\"Users_userBlockBody__34J-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lJQl\",\"logo\":\"Header_logo__2_KtS\"};","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"FriendsItem_avaMessage__gaQng\",\"name\":\"FriendsItem_name__3ASE-\",\"item\":\"FriendsItem_item__2mo-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__4UCXI\",\"info\":\"ProfileInfo_info__24fRA\",\"mainPic\":\"ProfileInfo_mainPic__23XAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postInfo\":\"MyPosts_postInfo__2c5lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__whpK4\",\"avatar\":\"Post_avatar__18xxM\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f50ceefd.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Friends_avaMessage__1Vc5_\",\"name\":\"Friends_name__3U4Qm\",\"friendsBlock\":\"Friends_friendsBlock__2RrYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2YBPj\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.adf3f16b.png\";","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, message: \"hello\", like: \"5\"},\r\n        {id: 1, message: \"how are you?\", like: \"0\"}\r\n    ],\r\n    text: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                message: state.text, like: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                text: ''\r\n            }\r\n            // stateCopy.posts = [...state.posts];\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.text = '';\r\n            // return stateCopy;\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                text: action.newText\r\n            }\r\n            // stateCopy.text = action.newText;\r\n            // return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\n\r\nexport const addTextChangeActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\n\r\nexport default profileReducer;\r\n\r\n\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Sasha\"},\r\n        {id: 2, name: \"Oxa\"},\r\n        {id: 3, name: \"Andrew\"},\r\n        {id: 4, name: \"Roman\"}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"how are you?\"},\r\n        {id: 3, message: \"yo\"},\r\n        {id: 4, message: \"yo\"}\r\n    ],\r\n    newMessageText: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    // let stateCopy;\r\n\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessage\r\n            }\r\n            // return stateCopy;\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = state.newMessageText;\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 5, message: newMessage} ]\r\n            }\r\n            // return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (message) => ({type: UPDATE_NEW_MESSAGE_TEXT, newMessage: message})\r\n\r\nexport const addSendMessageActionCreator = () => ({type: SEND_MESSAGE})\r\n\r\n\r\nexport default dialogsReducer;\r\n","import ava from \"./ava.png\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Sasha\", ava: ava},\r\n        {id: 2, name: \"Oxa\", ava: ava},\r\n        {id: 3, name: \"Andrew\", ava: ava}\r\n    ]\r\n};\r\n\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default friendsReducer;\r\n","import ava from './ava.png'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS'\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {id: 0, followed: false, photoUrl: ava,  fullName: 'Dmitry', status: 'Hello', location: {city: 'Minsk', country: 'Belarus'}},\r\n        // {id: 1, followed: false, photoUrl: ava, fullName: 'Oxa', status: 'Hi', location: {city: 'Moscow', country: 'Russia'}},\r\n        // {id: 2, followed: true, photoUrl: ava, fullName: 'Andrew', status: 'I am superhero', location: {city: 'Minsk', country: 'Belarus'}},\r\n        // {id: 3, followed: true, photoUrl: ava, fullName: 'Anna', status: 'Hello', location: {city: 'Minsk', country: 'Belarus'}},\r\n        // {id: 4, followed: false, photoUrl: ava, fullName: 'Roman', status: 'Hello', location: {city: 'Minsk', country: 'Belarus'}}\r\n\r\n    ]\r\n\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users:[...state.users, ...action.users ] }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId: userId})\r\nexport const unFollowAC = (userId) => ({type: UNFOLLOW, userId: userId})\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users: users })\r\n\r\nexport default usersReducer;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    friendsReducer: friendsReducer,\r\n    usersReducer: usersReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport './Header.module.css';\r\nimport classes from './Header.module.css';\r\nimport logo from './logo.png'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n<header className={classes.header}>\r\n    <img className={classes.logo}\r\n         src={logo}/>\r\n</header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport classes from './FriendsItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendsItem = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img className={classes.avaMessage} src={props.img}/>\r\n            <span className={classes.name}>{props.name}</span>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nFriendsItem.propTypes = {\r\n    name: PropTypes.string,\r\n    img: PropTypes.any\r\n}\r\n\r\nexport default FriendsItem;","import React from \"react\";\r\nimport classes from './Friends.module.css'\r\nimport avaMessage from \"./avaMessage.png\";\r\nimport FriendsItem from \"./FriendsItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElement = props.friends.map(friend => <FriendsItem key={friend.id} name={friend.name} img={friend.ava}/>)\r\n\r\n    return (\r\n        <div className={classes.friendsBlock}>\r\n            {friendsElement}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nFriends.propTypes = {\r\n    friends: PropTypes.array,\r\n    name: PropTypes.string\r\n}\r\n\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport './Nav.module.css';\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport Friends from \"../Friends/Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        friends: state.friendsReducer.friends\r\n    }\r\n}\r\n\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps) (Friends);\r\n\r\n\r\nexport default FriendsContainer;\r\n\r\n","import React from \"react\";\r\nimport './Nav.module.css';\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsItem from \"../Friends/FriendsItem\";\r\nimport Friends from \"../Friends/Friends\";\r\nimport PropTypes from 'prop-types';\r\nimport FriendsContainer from \"./FriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n\r\ndebugger\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/profile'} activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/news'} activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/music'} activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/settings'} activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to={'/friends'} activeClassName={classes.active}>Friends</NavLink>\r\n            </div>\r\n            {/*<Friends friends={props.state.friendsReducer.friends}/>*/}\r\n\r\n            <FriendsContainer />\r\n\r\n            <div className={classes.itemUsers}>\r\n                <NavLink to={'/users'} activeClassName={classes.active}>Find Users</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;\r\n\r\n","import React from \"react\";\r\nimport classes from './Post.module.css'\r\nimport avatar from './avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n           <img className={classes.avatar} src={avatar} />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let newPostRef = React.createRef();\r\n\r\n    let addPost = () => {\r\n        // props.dispatch(addPostActionCreator());\r\n        props.addPost();\r\n\r\n    }\r\n    let onTextChange = () => {\r\n        let text = newPostRef.current.value;\r\n        props.onTextChange(text);\r\n        // props.dispatch(addTextChangeActionCreator(text));\r\n\r\n    }\r\n\r\n\r\n    let postElement = props.posts.map(post => <Post key={post.id} message={post.message} like={post.like}/>)\r\n\r\n    return (\r\n        <div className={classes.postInfo}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onTextChange} ref={newPostRef} placeholder=\"New post\" value={props.text}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            {postElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (<div>\r\n            <div className={classes.mainPic}>\r\n\r\n            </div>\r\n            <div className={classes.info}>\r\n                <img className={classes.avatar}\r\n                     src=\"https://www.canva.com/wp-content/themes/canvaabout/img/colorPalette/image4.jpg\"/> +\r\n                description\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {addPostActionCreator, addTextChangeActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        text: state.profileReducer.text,\r\n        posts: state.profileReducer.posts\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        onTextChange: (text) => {\r\n            dispatch(addTextChangeActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n      // let state = props.store.getState();\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={classes.dialogCol}>\r\n            <img className={classes.avaMessage} src={avaMessage}/>\r\n            <NavLink to={\"/dialogs/\" + props.id}><span className={classes.name}>{props.name}</span></NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialog;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img className={classes.avaMessage + ' ' + props.className} src={avaMessage}/>\r\n            <span className={classes.messageText + ' ' + props.className}>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog\";\r\nimport Message from \"./Message\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // let state = props.state.dialogsReducer;\r\n\r\n    let newMessageRef = React.createRef();\r\n\r\n    let addNewMessage = () => {\r\n        // props.dispatch(addSendMessageActionCreator() );\r\n        props.addNewMessage();\r\n\r\n    }\r\n    let onTextMessageChange = () => {\r\n        let message = newMessageRef.current.value;\r\n        // props.dispatch(addMessageActionCreator(message));\r\n        props.onTextMessageChange(message);\r\n\r\n    }\r\n\r\n\r\n    let dialogElements = props.dialogsReducer.dialogs.map (dialog=> <Dialog id={dialog.id} key={dialog.id} name={dialog.name}/>)\r\n\r\n    let messageElements = props.dialogsReducer.messages.map(message=> {\r\n\r\n        return <Message key={message.id} message = {message.message} />})\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItem}>\r\n\r\n                {dialogElements}\r\n\r\n\r\n            </div>\r\n            <div className={classes.messages}>\r\n\r\n                {messageElements}\r\n\r\n                <div className={classes.textArea}>\r\n                    <textarea ref={newMessageRef} onChange={onTextMessageChange} className={classes.text}\r\n                              value={props.dialogsReducer.newMessageText}/>\r\n                    <button onClick={addNewMessage} className={classes.btn}>Send</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n","import React from \"react\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n         dialogsReducer: state.dialogsReducer\r\n     }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: () => {\r\n            dispatch(addSendMessageActionCreator())\r\n        },\r\n        onTextMessageChange: (message)=> {\r\n            dispatch(addMessageActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps) (Dialogs)\r\n\r\nexport default DialogsContainer;\r\n\r\n","import ava from './ava.png'\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\n\r\n\r\n\r\nlet store = {\r\n    _rerenderEntireTree() {\r\n\r\n    },\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id:0, message: \"hello\", like: \"5\"},\r\n                {id:1, message: \"how are you?\", like: \"0\"}\r\n            ],\r\n            text: ''\r\n        },\r\n\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: 1, name: \"Sasha\"},\r\n                {id: 2, name: \"Oxa\"},\r\n                {id: 3, name: \"Andrew\"},\r\n                {id: 4, name: \"Roman\"}\r\n            ],\r\n\r\n            messages: [\r\n                {id: 1, message: \"Hello\", rightElement: false},\r\n                {id: 2, message: \"how are you?\", rightElement: true},\r\n                {id: 3, message: \"yo\", rightElement: false},\r\n                {id: 4, message: \"yo\", rightElement: true}\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        friendsPage: {\r\n            friends: [\r\n                {id: 1, name: \"Sasha\", ava: ava},\r\n                {id: 2, name: \"Oxa\", ava: ava},\r\n                {id: 3, name: \"Andrew\", ava: ava}\r\n            ]\r\n        }\r\n\r\n    },\r\n    subscribe(observer) {\r\n        this._rerenderEntireTree = observer;\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n\r\n        this._rerenderEntireTree(this._state);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport classes from './Users.module.css'\r\nimport ava from \"../../redux/ava.png\";\r\nimport * as axios from 'axios'\r\nimport userPhoto from '../../assets/img/user.png'\r\n\r\n\r\nconst Users = (props) => {\r\n    let getUsers = () => {\r\n        if (props.users.length === 0) {\r\n            axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n                props.setUsers(response.data.items)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.usersPage}>\r\n\r\n            <p className={classes.users}>Users</p> <button onClick={getUsers}> Get Users </button>\r\n\r\n\r\n            {props.users.map(user => <div key={user.id}>\r\n                <div className={classes.userBlock}>\r\n                <span>\r\n                <div>\r\n                    <img className={classes.avaMessage}\r\n                         src={user.photos.small !== null ? user.photos.small : userPhoto}/>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button onClick={() => {\r\n                            props.unFollow(user.id)\r\n                        }}>Unfollow</button> :\r\n                        <button onClick={() => {\r\n                            props.follow(user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n                </span>\r\n                    <div className={classes.userBlockBody}>\r\n                    <span>\r\n                        <div>\r\n                            {user.name}\r\n                        </div>\r\n                        <div>\r\n                            {user.status}\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                        <span>\r\n                        <div>\r\n                            {'user.location.city'}\r\n\r\n                        </div>\r\n                        <div>\r\n                            {'user.location.country'}\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {followAC, setUsersAC, unFollowAC} from \"../../redux/usersReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersReducer.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) =>{\r\n            dispatch(followAC(userId))\r\n        },\r\n        unFollow: (userId) => {\r\n            dispatch(unFollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header/Header.jsx\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport Profile from \"./components/Profile/Profile.jsx\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport store from \"./redux/store\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport Users from \"./components/Users/Users\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = (props) => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Nav />\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile' render={() => <Profile\n                                                                   />} />\n                    <Route path='/dialogs' render={() => <DialogsContainer\n                                                                   />} />\n                    {/*<Route path='/friends' render={() => <Friends state={props.state.friendsPage} />} />*/}\n\n                    <Route path='/users' render={() => <UsersContainer />} />\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}