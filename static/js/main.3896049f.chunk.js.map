{"version":3,"sources":["components/Nav/Nav.module.css","components/Profile/ProfileInfo.module.css","components/Header/logo.png","components/Friends/Friends.module.css","assets/img/user.png","components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/avatar.png","components/Friends/avaMessage.png","components/Users/Users.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/friendsReducer.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","utils/validators/validators.js","components/Header/Header.jsx","components/Friends/FriendsItem.jsx","components/Friends/Friends.jsx","components/Nav/FriendsContainer.jsx","components/Nav/Nav.jsx","components/Dialogs/Dialog.jsx","components/Dialogs/Message.jsx","components/FormsControls/FormControls.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Preloader/PreLoader.jsx","components/Users/userSelectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo.jsx","components/Profile/ProfileInfoWithHooks.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/HeaderContainer.jsx","components/Header/Login.jsx","App.js","index.js","components/Header/Header.module.css","components/FormsControls/FormControls.module.css","components/Dialogs/avaMessage.png","components/Profile/done.png","components/Profile/undone.jpg","redux/ava.png","components/Friends/FriendsItem.module.css","components/Preloader/PreLoader.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","like","profile","getUserStatusActionCreator","type","profileReducer","state","action","newPost","newPostText","text","dialogs","name","messages","dialogsReducer","newMessage","newMessageText","friends","ava","friendsReducer","users","totalUsersCount","isFetching","followingInProgress","toggleFetching","toggleFollowing","usersReducer","map","user","followed","filter","login","isAuth","setAuthUserData","payload","isOnAuth","dispatch","resultCode","logout","authReducer","initialized","appReducer","reducers","combineReducers","auth","form","formReducer","store","createStore","applyMiddleware","thunk","maxLength","Header","props","className","classes","header","logo","src","loginBlock","onClick","to","FriendsItem","item","avaMessage","img","Friends","friendsElement","friend","key","friendsBlock","FriendsContainer","connect","Nav","nav","activeClassName","active","itemUsers","Dialog","dialogCol","Message","dialog","messageText","FormControl","input","meta","child","hasError","error","touched","formControl","children","TextArea","restProps","Input","required","value","AddNewMessageFormRedux","reduxForm","onSubmit","handleSubmit","textArea","Field","validate","component","btn","Dialogs","dialogElements","messageElements","dialogItem","values","addNewMessage","mapStateToPropsRedirect","withAuthRedirect","Component","RedirectComponent","this","React","compose","addSendMessageActionCreator","Users","pagesCount","Math","ceil","pages","i","push","usersPage","p","selectedPage","page","e","onPageChanged","userItem","userBlock","photos","small","userPhoto","alt","disabled","some","unFollow","follow","userBlockBody","userStatus","PreLoader","loader","loaderItem","getAllUsersSelector","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","getUsers","followUser","unfollowUser","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","Post","avatar","maxLength10","length","AddNewPostFormRedux","placeholder","addPost","MyPosts","postElement","postInfo","MyPostsContainer","addPostActionCreator","ProfileInfoWithHooks","useState","isEditMode","setEditMode","setStatus","useEffect","isOnEditMode","mainPic","info","large","profileInfo","fullName","onChange","currentTarget","autoFocus","onBlur","updateStatus","onDoubleClick","aboutMe","lookingForAJob","job","done","undone","contacts","href","facebook","vk","twitter","instagram","Profile","content","ProfileContainer","params","authUserId","history","getProfileThunk","getStatusThunk","updateStatusThunk","console","log","withRouter","HeaderContainer","LoginReduxForm","formError","stopSubmit","_error","formData","App","initialise","initialised","path","render","DialogsContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3896049f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__29Zts\",\"item\":\"Nav_item__3AO71\",\"active\":\"Nav_active__2Jdn9\",\"friends\":\"Nav_friends__2m-nt\",\"itemUsers\":\"Nav_itemUsers__3v6tu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__4UCXI\",\"info\":\"ProfileInfo_info__24fRA\",\"mainPic\":\"ProfileInfo_mainPic__23XAu\",\"job\":\"ProfileInfo_job__2yVUl\",\"contacts\":\"ProfileInfo_contacts__1GtZn\",\"profileInfo\":\"ProfileInfo_profileInfo__1sO0z\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f50ceefd.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Friends_avaMessage__1Vc5_\",\"name\":\"Friends_name__3U4Qm\",\"friendsBlock\":\"Friends_friendsBlock__2RrYR\"};","module.exports = __webpack_public_path__ + \"static/media/user.93a57c9f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2YBPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35Lum\",\"dialogItem\":\"Dialogs_dialogItem__2bA-5\",\"active\":\"Dialogs_active__34DVD\",\"dialogCol\":\"Dialogs_dialogCol__18ftw\",\"dialog\":\"Dialogs_dialog__31XvN\",\"messages\":\"Dialogs_messages__3ZC1X\",\"message\":\"Dialogs_message__3ETRK\",\"avaMessage\":\"Dialogs_avaMessage__2unvE\",\"name\":\"Dialogs_name__3Ela2\",\"rightItem\":\"Dialogs_rightItem__2pMdr\",\"messageText\":\"Dialogs_messageText__2RuMn\",\"textArea\":\"Dialogs_textArea__lBIak\",\"btn\":\"Dialogs_btn__2e9BP\",\"text\":\"Dialogs_text__13LOX\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.adf3f16b.png\";","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"Users_avaMessage__3YZA3\",\"usersPage\":\"Users_usersPage__DRlhh\",\"users\":\"Users_users__1UuJc\",\"userBlock\":\"Users_userBlock__26PAc\",\"userBlockBody\":\"Users_userBlockBody__34J-l\",\"userItem\":\"Users_userItem__16tYE\",\"userStatus\":\"Users_userStatus__3yUGZ\",\"userTitle\":\"Users_userTitle__1wq5P\",\"page\":\"Users_page__2vjn6\",\"selectedPage\":\"Users_selectedPage__gZpN4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {'API-KEY': 'f0e08188-8253-43c0-9ba4-c5828ee19e1e'}\r\n    }\r\n)\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response =>\r\n            response.data)\r\n    },\r\n    followUser(userId){\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollowUser(userId){\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status: status}).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthData(){\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => response.data)\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`).then(response => response.data)\r\n    }\r\n}","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst GET_USER_STATUS = 'GET_USER_STATUS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, message: \"hello\", like: \"5\"},\r\n        {id: 1, message: \"how are you?\", like: \"0\"}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                message: action.newPostText, like: \"0\"\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                text: ''\r\n            }\r\n\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case GET_USER_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\n\r\nexport const setUserProfileActionCreator = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getUserStatusActionCreator = (status) => ({type: GET_USER_STATUS, status})\r\n\r\n\r\nexport const getProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(userId).then(data => {\r\n            dispatch(setUserProfileActionCreator(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(data => {\r\n            console.log(data)\r\n            dispatch(getUserStatusActionCreator(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(getUserStatusActionCreator(status))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n\r\n","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Sasha\"},\r\n        {id: 2, name: \"Oxa\"},\r\n        {id: 3, name: \"Andrew\"},\r\n        {id: 4, name: \"Roman\"}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"how are you?\"},\r\n        {id: 3, message: \"yo\"},\r\n        {id: 4, message: \"yo\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    // let stateCopy;\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessage = action.newMessageText;\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 5, message: newMessage} ]\r\n            }\r\n            // return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const addSendMessageActionCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\n\r\nexport default dialogsReducer;\r\n","import ava from \"./ava.png\";\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Sasha\", ava: ava},\r\n        {id: 2, name: \"Oxa\", ava: ava},\r\n        {id: 3, name: \"Andrew\", ava: ava}\r\n    ]\r\n};\r\n\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default friendsReducer;\r\n","import {usersAPI} from \"../api/api\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE-FETCHING';\r\nconst TOGGLE_FOLLOWING = 'TOGGLE_FOLLOWING'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId: userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId: userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users: users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount: totalUsersCount})\r\nexport const toggleFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching: isFetching})\r\nexport const toggleFollowing = (followingInProgress, userId) => ({type: TOGGLE_FOLLOWING, followingInProgress, userId})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const unfollowUser = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, userId))\r\n        usersAPI.unfollowUser(userId).then(data => {\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId))\r\n                dispatch(toggleFollowing(false, userId))\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const followUser = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowing(true, userId))\r\n        usersAPI.followUser(userId).then(data => {\r\n\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n                dispatch(toggleFollowing(false, userId))\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n// const TOGGLE_FETCHING = 'TOGGLE-FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const isOnAuth = () => {\r\n    return (dispatch) => {\r\n\r\n        return authAPI.getAuthData().then(data => {\r\n\r\n            if(data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n\r\n        authAPI.login(email, password, rememberMe).then(data => {\r\n\r\n            if(data.resultCode === 0) {\r\n                dispatch(isOnAuth())\r\n            } else {\r\n                let message = data.messages.length > 0 ? data.messages[0] : 'some error'\r\n                dispatch(stopSubmit('login', {_error: message}));\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout().then(data => {\r\n            if(data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;\r\n","\r\nimport {isOnAuth, setAuthUserData} from \"./authReducer\";\r\n\r\nconst IS_INITIALIZED = 'IS_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const isInitialized = () => ({type: IS_INITIALIZED})\r\n\r\nexport const initialise = () => {\r\n    return (dispatch) => {\r\n        debugger\r\n        dispatch(isOnAuth()).then(()=> {\r\n            dispatch(isInitialized())\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer: profileReducer,\r\n    dialogsReducer: dialogsReducer,\r\n    friendsReducer: friendsReducer,\r\n    usersReducer: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appReducer: appReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","export const required = (value) => {\r\n   if (value) {\r\n       return undefined\r\n   } else {\r\n       return 'Field is required'\r\n   }\r\n\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value.length < maxLength) {\r\n            return undefined\r\n        } else {\r\n            return `Max length is ${maxLength} symbols`\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// export const maxlenght30 = (value) => {\r\n//     if (value.length < 30) {\r\n//         return undefined\r\n//     } else {\r\n//         return 'Max length is 30 symbols'\r\n//     }\r\n//\r\n// }\r\n\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\nimport classes from './Header.module.css';\r\nimport logo from './logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <img className={classes.logo}\r\n                 src={logo}/>\r\n\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> : <NavLink to={'/login'}>Login</NavLink> }\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport classes from './FriendsItem.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendsItem = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img className={classes.avaMessage} src={props.img}/>\r\n            <span className={classes.name}>{props.name}</span>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nFriendsItem.propTypes = {\r\n    name: PropTypes.string,\r\n    img: PropTypes.any\r\n}\r\n\r\nexport default FriendsItem;","import React from \"react\";\r\nimport classes from './Friends.module.css'\r\nimport avaMessage from \"./avaMessage.png\";\r\nimport FriendsItem from \"./FriendsItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElement = props.friends.map(friend => <FriendsItem key={friend.id} name={friend.name} img={friend.ava}/>)\r\n\r\n    return (\r\n        <div className={classes.friendsBlock}>\r\n            {friendsElement}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nFriends.propTypes = {\r\n    friends: PropTypes.array,\r\n    name: PropTypes.string\r\n}\r\n\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport './Nav.module.css';\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport Friends from \"../Friends/Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        friends: state.friendsReducer.friends\r\n    }\r\n}\r\n\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps) (Friends);\r\n\r\n\r\nexport default FriendsContainer;\r\n\r\n","import React from \"react\";\r\nimport './Nav.module.css';\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsContainer from \"./FriendsContainer\";\r\n\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/profile'} activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/news'} activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/music'} activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to={'/settings'} activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={classes.friends}>\r\n                <NavLink to={'/friends'} activeClassName={classes.active}>Friends</NavLink>\r\n            </div>\r\n            {/*<Friends friends={props.state.friendsReducer.friends}/>*/}\r\n\r\n            <FriendsContainer />\r\n\r\n            <div className={classes.itemUsers}>\r\n                <NavLink to={'/users'} activeClassName={classes.active}>Find Users</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Nav;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={classes.dialogCol}>\r\n            <img className={classes.avaMessage} src={avaMessage}/>\r\n            <NavLink to={\"/dialogs/\" + props.id}><span className={classes.name}>{props.name}</span></NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialog;\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport avaMessage from './avaMessage.png'\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img className={classes.avaMessage + ' ' + props.className} src={avaMessage}/>\r\n            <span className={classes.messageText + ' ' + props.className}>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport classes from './FormControls.module.css'\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n\r\n            {props.children}\r\n            <div>\r\n                { hasError && <span className={classes.error}> {meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n   return (<FormControl {...props}> <textarea  {...input} {...restProps}/></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (<FormControl {...props}> <input  {...input} {...restProps}/></FormControl>)\r\n\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog\";\r\nimport Message from \"./Message\";\r\nimport {\r\n    addMessageActionCreator,\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../FormsControls/FormControls\";\r\nimport {maxLenghtCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        // props.dispatch(addSendMessageActionCreator() );\r\n        props.addNewMessage(values.newMessageText);\r\n\r\n    }\r\n\r\n    let dialogElements = props.dialogsReducer.dialogs.map(dialog => <Dialog id={dialog.id} key={dialog.id}\r\n                                                                            name={dialog.name}/>)\r\n\r\n    let messageElements = props.dialogsReducer.messages.map(message => {\r\n\r\n        return <Message key={message.id} message={message.message}/>\r\n    })\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItem}>\r\n\r\n                {dialogElements}\r\n\r\n\r\n            </div>\r\n            <div className={classes.messages}>\r\n\r\n                {messageElements}\r\n\r\n                <AddNewMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n// const maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.textArea}>\r\n            <Field validate={[required]} component={TextArea} name='newMessageText' className={classes.text}/>\r\n            <button className={classes.btn}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewMessageFormRedux = reduxForm({form: 'AddNewMessageForm'})(AddNewMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = ( Component ) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect) (RedirectComponent);\r\n\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    addSendMessageActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n         dialogsReducer: state.dialogsReducer\r\n     }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (newMessageText) => {\r\n            dispatch(addSendMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps), withAuthRedirect ) (Dialogs);\r\n\r\n","import React from \"react\";\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/img/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return <div className={classes.usersPage}>\r\n\r\n        {!props.isFetching ? <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={`${props.currentPage === p && classes.selectedPage} ${classes.page}`}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            </div>\r\n\r\n\r\n            <div className={classes.users}>\r\n                {props.users.map(user => <div className={classes.userItem} key={user.id}>\r\n                    <div className={classes.userBlock}>\r\n                <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                         <img className={classes.avaMessage}\r\n                         src={user.photos.small !== null ? user.photos.small : userPhoto} alt='photo'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                             onClick={ () => {props.unFollow(user.id)}}>Unfollow</button> :\r\n                        <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                onClick={ () =>{props.follow(user.id)}\r\n                        }>Follow</button>}\r\n                </div>\r\n                </span>\r\n                        <div className={classes.userBlockBody}>\r\n\r\n                            <div>\r\n                                {user.name}\r\n                            </div>\r\n                            <div className={classes.userStatus}>\r\n                                {user.status}\r\n\r\n                            </div>\r\n\r\n                            <span>\r\n                        <div>\r\n                            {'user.location.city'}\r\n\r\n                        </div>\r\n                        <div>\r\n                            {'user.location.country'}\r\n\r\n                        </div>\r\n\r\n                    </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>)}\r\n\r\n            </div>\r\n        </div> : null}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n","import React from \"react\";\r\nimport classes from './PreLoader.module.css'\r\n\r\n\r\nconst PreLoader = (props) => {\r\n\r\n\r\n    return <div className={`${classes.loader} ${classes.loaderItem}`}>\r\n            <span> </span>\r\n            <span> </span>\r\n            <span> </span>\r\n        </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default PreLoader;\r\n\r\n","import {createSelector} from \"reselect\";\r\nconst getAllUsers = (state) => {\r\n    return state.usersReducer.users\r\n}\r\nexport const getAllUsersSelector = createSelector(getAllUsers,(users) => {\r\n     return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersReducer.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersReducer.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersReducer.currentPage\r\n}\r\nexport const getIsFetching= (state) => {\r\n    return state.usersReducer.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersReducer.followingInProgress\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n     followUser, getUsers,\r\n    toggleFollowing,\r\n     unfollowUser\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getAllUsers, getAllUsersSelector,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"./userSelectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <PreLoader /> : null}\r\n            <Users followingInProgress={this.props.followingInProgress} totalUsersCount={this.props.totalUsersCount}\r\n                   currentPage={this.props.currentPage} pageSize={this.props.pageSize}\r\n                   users={this.props.users} follow={this.props.followUser}\r\n                   unFollow={this.props.unfollowUser} onPageChanged={this.onPageChanged}\r\n                   isFetching={this.props.isFetching}/>\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getAllUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n     followUser,\r\n     unfollowUser,\r\n     toggleFollowing,\r\n     getUsers\r\n }))(UsersContainer)\r\n\r\n","import React from \"react\";\r\nimport classes from './Post.module.css'\r\nimport avatar from './avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n           <img className={classes.avatar} src={avatar} />\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.like}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../FormsControls/FormControls\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let addPost = (values) => {\r\n        // props.dispatch(addPostActionCreator());\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    let postElement = props.posts.map(post => <Post key={post.id} message={post.message} like={post.like}/>)\r\n\r\n    return (\r\n        <div className={classes.postInfo}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n\r\n            {postElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  validate={[required, maxLength10]} component={TextArea} placeholder=\"New post\" name='newPostText'/>\r\n            </div>\r\n            <div className={classes.addPost}>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form:'AddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\n\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        text: state.profileReducer.text,\r\n        posts: state.profileReducer.posts\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport done from './done.png'\r\nimport undone from './undone.jpg';\r\n\r\n\r\nclass ProfileInfo extends React.Component {\r\n\r\n    state = {\r\n        isEditMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    isOnEditMode = () => {\r\n        this.setState({\r\n            isEditMode: true\r\n            // status: this.props.status\r\n        })\r\n    }\r\n\r\n    changeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n\r\n    }\r\n    onBlur = () => {\r\n        this.setState({\r\n            isEditMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <PreLoader />\r\n        }\r\n        return (<div>\r\n                <div className={classes.mainPic}>\r\n\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <img className={classes.avatar}\r\n                         src={this.props.profile.photos.large}/>\r\n                    <div className={classes.profileInfo}>\r\n                        <div>{this.props.profile.fullName}</div>\r\n                        {/*<div>{this.props.status}</div>*/}\r\n                        {this.state.isEditMode ? <input onChange={this.changeStatus} autoFocus={true} onBlur={this.onBlur} value={this.state.status}/> :\r\n                            <div onDoubleClick={this.isOnEditMode}>{this.props.status || '-------'}</div> }\r\n\r\n                        <div onDoubleClick={this.isOnEditMode}>{this.props.profile.aboutMe}</div>\r\n\r\n                        <div>\r\n                            Looking for a job: {this.props.profile.lookingForAJob ?\r\n                            <img className={classes.job} alt='' src={done}/> :\r\n                            <img className={classes.job} alt='' src={undone}/>}\r\n                        </div>\r\n                        <div>\r\n                            Contacts:\r\n                            <div className={classes.contacts}>\r\n                                <a href='#'>{this.props.profile.contacts.facebook}</a>\r\n                                <a href='#'>{this.props.profile.contacts.vk}</a>\r\n                                <a href='#'>{this.props.profile.contacts.twitter}</a>\r\n                                <a href='#'>{this.props.profile.contacts.instagram}</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport PreLoader from \"../Preloader/PreLoader\";\r\nimport done from './done.png'\r\nimport undone from './undone.jpg';\r\n\r\n\r\nconst ProfileInfoWithHooks = (props) => {\r\n\r\n    const [isEditMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const isOnEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n\r\n    if (!props.profile) {\r\n        return <PreLoader/>\r\n    }\r\n    return (<div>\r\n            <div className={classes.mainPic}>\r\n\r\n            </div>\r\n            <div className={classes.info}>\r\n                <img className={classes.avatar}\r\n                     src={props.profile.photos.large}/>\r\n                <div className={classes.profileInfo}>\r\n                    <div>{props.profile.fullName}</div>\r\n                    {/*<div>{this.props.status}</div>*/}\r\n                    {isEditMode ? <input onChange={changeStatus} autoFocus={true} onBlur={onBlur}\r\n                                         value={status}/> :\r\n                        <div onDoubleClick={isOnEditMode}>{props.status || '-------'}</div>}\r\n\r\n                    <div onDoubleClick={isOnEditMode}>{props.profile.aboutMe}</div>\r\n\r\n                    <div>\r\n                        Looking for a job: {props.profile.lookingForAJob ?\r\n                        <img className={classes.job} alt='' src={done}/> :\r\n                        <img className={classes.job} alt='' src={undone}/>}\r\n                    </div>\r\n                    <div>\r\n                        Contacts:\r\n                        <div className={classes.contacts}>\r\n                            <a href='#'>{props.profile.contacts.facebook}</a>\r\n                            <a href='#'>{props.profile.contacts.vk}</a>\r\n                            <a href='#'>{props.profile.contacts.twitter}</a>\r\n                            <a href='#'>{props.profile.contacts.instagram}</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfoWithHooks;\r\n\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ProfileInfoWithHooks from \"./ProfileInfoWithHooks\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <ProfileInfoWithHooks status={props.status} profile={props.profile} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    updateStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.put('/login')\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getStatusThunk(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatusThunk}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {getProfileThunk, getStatusThunk, updateStatusThunk}), withRouter, withAuthRedirect) (ProfileContainer);\r\n\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/authReducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n","import React from \"react\";\r\nimport './Header.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../FormsControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from './../FormsControls/FormControls.module.css'\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n       props.login(formData.email, formData.password, formData.rememberMe)\r\n\r\n    }\r\n    if (props.isAuth) return <Redirect to='/profile'/>\r\n    return (<div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginForm =(props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required]} placeholder='email' name={'email'} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field validate={[required]} placeholder='password' name={'password'} type='password' component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name={'rememberMe'} component={'input'}/> Remember me\r\n            </div>\r\n            {props.error && <div className={classes.formError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header.jsx\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Header/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialise} from \"./redux/appReducer\";\nimport PreLoader from \"./components/Preloader/PreLoader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n\n        this.props.initialise()\n    }\n\n    render() {\n        if(!this.props.initialised) {\n            return <PreLoader/>\n        }\n\n        return (\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className=\"app-wrapper-content\">\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer\n                        />}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer\n                        />}/>\n                        {/*<Route path='/friends' render={() => <Friends state={props.state.friendsPage} />} />*/}\n\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n\n                        <Route path='/login' render={() => <Login/>}/>\n\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialised: state.appReducer.initialized\n    }\n}\n\nexport default compose(withRouter, connect(mapStateToProps, {initialise})) (App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1lJQl\",\"logo\":\"Header_logo__2_KtS\",\"loginBlock\":\"Header_loginBlock__2ESaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControls_form-control__3eTSU\",\"formControl\":\"FormControls_formControl__CM7hd\",\"error\":\"FormControls_error__LBTXp\",\"formError\":\"FormControls_formError__16X9q\"};","module.exports = __webpack_public_path__ + \"static/media/avaMessage.adf3f16b.png\";","module.exports = __webpack_public_path__ + \"static/media/done.b9ea0577.png\";","module.exports = __webpack_public_path__ + \"static/media/undone.007a5ffb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ava.adf3f16b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaMessage\":\"FriendsItem_avaMessage__gaQng\",\"name\":\"FriendsItem_name__3ASE-\",\"item\":\"FriendsItem_item__2mo-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"PreLoader_loader__1e5oh\",\"loaderItem\":\"PreLoader_loaderItem__7rqyc\",\"bounce\":\"PreLoader_bounce__2RXZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postInfo\":\"MyPosts_postInfo__2c5lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__whpK4\",\"avatar\":\"Post_avatar__18xxM\"};"],"sourceRoot":""}